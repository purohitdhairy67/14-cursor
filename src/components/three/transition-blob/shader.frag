export default "#define GLSLIFY 1\nuniform vec3 u_color;\nuniform vec3 u_color2;\nuniform float u_time;\nuniform vec2 u_res;\nuniform vec2 u_startPosition;\n\nvarying vec2 v_uv;\nvarying float v_n;\nvarying float v_progress;\n\n//---------------------------------------------------------\n// draw rounded rectangle http://glslsandbox.com/e#43292.1\n//---------------------------------------------------------\nfloat roundedRectangle (vec2 uv, vec2 pos, vec2 size, float radius, float thickness)\n{\n  float d = length(max(abs(uv - pos), size) - size) - radius;\n  // d *= thickness;\n  // return 1.0 - smoothstep(thickness, thickness+0.01, d);\n  // return smoothstep(0.66, 0.33, d / thickness * 5.0);\n  // return smoothstep(0.77, 0.22, d / thickness * 5.0);\n  return smoothstep(.8, 0.2, d / thickness * 5.0);\n\n}\n\nvoid main() {\n    float aspect = u_res.x / u_res.y;\n\n    // Position\n    vec2 startPos = u_startPosition;\n    startPos.x *= aspect;\n    vec2 endPos = vec2(0, 0.);\n    // vec2 pos = mix(startPos, endPos, smoothstep(0.3, 0.8, v_progress));\n    vec2 pos = mix(startPos, endPos, smoothstep(0.55, 0.9, v_progress));\n\n    // Size\n    vec2 size = mix(vec2(.0), vec2(1.0 * aspect, 1.0), smoothstep(0.6, .95, v_progress));\n\n    // Blur\n    float startBlur = 7.0;\n    // float endBlur = .000001;\n    float endBlur = 1.000001;\n    float blur = mix(.00001, startBlur, smoothstep(0., 0.7, v_progress));\n    blur = mix(blur, endBlur, smoothstep(0.7, 1.0, v_progress));\n\n    // rounded mask\n    vec2 uv = (2.0 * v_uv - 1.0); // -1.0 .. 1.0\n    uv.x *= aspect;\n    float c = roundedRectangle(uv, pos, size, .0, blur) * 2.6;\n    // float c = roundedRectangle(uv, pos, vec2(.0 * aspect, .0), .0, 10.) * 2.6;\n\n    // NOISE from vertex shader\n    float n = v_n - 1.0;\n\n    // fast antialiasing\n    float finalMask = smoothstep(0.47, 0.5, n + c);\n\n    vec3 color = mix(u_color, u_color2, smoothstep(0.6, .95, v_progress));\n    gl_FragColor = vec4(color, finalMask);\n\n    // vec4 finalImage = vec4(vec3(1., 0., 0.), 1.0);\n    // gl_FragColor = finalImage;\n}\n";